# Description: Système de base de NuTyX, contient les répertoires et scripts de demarrage.
# URL: http://www.nutyx.org/
# Maintainer: NuTyX core team
# Packager: thierryn1 at hispeed dot ch

scriptsversion=20130821
BLFSscriptsversion=20131023
PKGMK_GROUPS=()
source=( http://nutyx.meticul.eu/files/patchs/$name/lfs-bootscripts-$scriptsversion.tar.bz2 
	nutyx.1 http://nutyx.meticul.eu/files/patchs/$name/sekong-03.patch
	nu flushmem
	http://www.linuxfromscratch.org/blfs/downloads/svn/blfs-bootscripts-$BLFSscriptsversion.tar.bz2)
build () {
mkdir $PKG/{dev,proc,sys}
mknod -m 600 $PKG/dev/console c 5 1
mknod -m 666 $PKG/dev/null c 1 3
mkdir -pv $PKG/{bin,boot,etc/{opt,sysconfig},home,lib,mnt,opt,run}
mkdir -pv $PKG/{media/{floppy,cdrom},sbin,srv,var}
install -dv -m 0750 $PKG/root
install -dv -m 1777 $PKG/tmp $PKG/var/tmp
mkdir -pv $PKG/usr/share
mkdir -pv $PKG/usr/local
for file in nu flushmem
do
	install -m755 $file $PKG/bin/$file
done
install --directory --mode=0755 --owner=root --group=root $PKG/etc/profile.d


mkdir $PKG/etc/{skel,modprobe.d}

for dir in /usr /usr/local; do
  ln -sv share/{man,doc,info} $PKG/$dir
done
case $(uname -m) in
 x86_64) ln -sv lib $PKG/lib64 && ln -sv lib $PKG/usr/lib64 ;;
esac
mkdir -v $PKG/var/{log,mail,spool}
ln -sv /run $PKG/var/run
ln -sv /run/lock $PKG/var/lock
ln -sv /lib/i18n $PKG/usr/share/i18n
mkdir -pv $PKG/var/{opt,cache,lib/{misc,locate},local}
mkdir -p $PKG/var/lib/pkg
echo "$version-$release" > $PKG/var/lib/pkg/nutyx-version
ln -s /var/lib/pkg/nutyx-version $PKG/etc/nutyx-version

ln -sv /proc/self/mounts $PKG/etc/mtab
echo SVN-20130714 > $PKG/etc/lfs-release
cat > $PKG/etc/passwd << "EOF"
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/dev/null:/bin/false
lp:x:9:9:Print Service User:/dev/null:/bin/false
atd:x:17:17:add daemon:/dev/null:/bin/false
messagebus:x:18:18:D-Bus Message Daemon User:/dev/null:/bin/false
named:x:20:20:BIND Owner:/home/named:/bin/false
gdm:x:21:21:GDM Daemon User:/var/lib/gdm:/bin/false
fcron:x:22:22:Fcron User:/dev/null:/bin/false
kdm:x:24:24:KDM Daemon User:/dev/null:/bin/false
apache:x:25:25:Apache Server:/dev/null:/bin/false
smmsp:x:26:26:Sendmail Daemon:/dev/null:/bin/false
polkitd:x:27:27:Policy Kit Daemon User:/etc/polkit-1:/bin/false
exim:x:31:31:Exim Daemon:/dev/null:/bin/false
postfix:x:32:32:Postfix Daemon User:/dev/null:/bin/false
sendmail:x:34:34:Sendmail Daemon:/dev/null:/bin/false
vmailman:x:35:35:Vmail Daemon:/dev/null:/bin/false
mysql:x:40:40:MySQL Server:/dev/null:/bin/false
postgres:x:41:41:PostgreSQL Server:/srv/pgsql/data:/bin/bash
rsyncd:x:48:48:rsyncd Daemon:/home/rsync:/bin/false
sshd:x:50:50:sshd PrivSep:/var/lib/sshd:/bin/false
games:x:60:60:Games High Score Owner:/var/games:/bin/false
avahi:x:84:84:Avahi daemon:/:/bin/false
nobody:x:99:99:Unprivileged User:/dev/null:/bin/false
EOF
cat > $PKG/etc/group << "EOF"
root:x:0:
bin:x:1:
sys:x:2:
kmem:x:3:
tape:x:4:
tty:x:5:
daemon:x:6:
floppy:x:7:
disk:x:8:
lp:x:9:
dialout:x:10:
audio:x:11:gdm
video:x:12:gdm
utmp:x:13:
usb:x:14:
cdrom:x:15:
adm:x:16:
atd:x:17:
messagebus:x:18:
lpadmin:x:19:
named:x:20:
gdm:x:21:
fcron:x:22:
wheel:x:23:root
kdm:x:24:
apache:x:25:
smmsp:x:26:
polkitd:x:27:
exim:x:31:
postfix:x:32:
postdrop:x:33:
mail:x:34:
vmailman:x:35:
news:x:36:
mysql:x:40:
postgres:x:41:
ftp:x:45:
rsyncd:x:48:
sshd:x:50:
stunnnel:x:51:
pppusers:x:52:
svn:x:56:
svntest:x:57:
pulse:x:58:
pulse-access:x:59:
games:x:60:
kvm:x:61:
wireshark:x:62:
scanner:x:70:
avahi:x:84:
avahi-autoipd:x:85:
netdev:x:86:
nogroup:x:99:
users:x:100:
EOF
touch $PKG/var/log/{btmp,lastlog,wtmp,bootlog}
chgrp -v 13 $PKG/var/log/lastlog
chmod -v 664  $PKG/var/log/lastlog
chmod -v 600  $PKG/var/log/btmp
cat > $PKG/etc/shells << "EOF"
# Begin /etc/shells

/bin/sh
/bin/bash

# End /etc/shells
EOF
cat > $PKG/etc/profile << "EOF"
# Begin /etc/profile
# Written for Beyond Linux From Scratch
# by James Robertson <jameswrobertson@earthlink.net>
# modifications by Dagmar d'Surreal <rivyqntzne@pbzpnfg.arg>

# System wide environment variables and startup programs.

# System wide aliases and functions should go in /etc/bashrc.  Personal
# environment variables and startup programs should go into
# ~/.bash_profile.  Personal aliases and functions should go into
# ~/.bashrc.

# Functions to help us manage paths.  Second argument is the name of the
# path variable to be modified (default: PATH)
pathremove () {
        local IFS=':'
        local NEWPATH
        local DIR
        local PATHVARIABLE=${2:-PATH}
        for DIR in ${!PATHVARIABLE} ; do
                if [ "$DIR" != "$1" ] ; then
                  NEWPATH=${NEWPATH:+$NEWPATH:}$DIR
                fi
        done
        export $PATHVARIABLE="$NEWPATH"
}

pathprepend () {
        pathremove $1 $2
        local PATHVARIABLE=${2:-PATH}
        export $PATHVARIABLE="$1${!PATHVARIABLE:+:${!PATHVARIABLE}}"
}

pathappend () {
        pathremove $1 $2
        local PATHVARIABLE=${2:-PATH}
        export $PATHVARIABLE="${!PATHVARIABLE:+${!PATHVARIABLE}:}$1"
}


# Set the initial path
export PATH=/bin:/usr/bin:/sbin:/usr/sbin

if [ $EUID -eq 0 ] ; then
        unset HISTFILE
fi

# Setup some environment variables.
export HISTSIZE=1000
export HISTIGNORE="&:[bf]g:exit"

# Setup a red prompt for root and a green one for users.
NORMAL="\[\e[0m\]"
RED="\[\e[1;31m\]"
GREEN="\[\e[1;32m\]"
if [[ $EUID == 0 ]] ; then
  PS1="$RED\u [ $NORMAL\w$RED ]# $NORMAL"
else
  PS1="$GREEN\u [ $NORMAL\w$GREEN ]\$ $NORMAL"
fi

for script in /etc/profile.d/*.sh ; do
        if [ -r $script ] ; then
                . $script
        fi
done

# Now to clean up
unset pathremove pathprepend pathappend

# End /etc/profile
EOF
cat > $PKG/etc/profile.d/dircolors.sh << "EOF"
# Setup for /bin/ls to support color, the alias is in /etc/bashrc.
if [ -f "/etc/dircolors" ] ; then
        eval $(dircolors -b /etc/dircolors)

        if [ -f "$HOME/.dircolors" ] ; then
                eval $(dircolors -b $HOME/.dircolors)
        fi
fi
alias ls='ls --color=auto'
EOF
cat > $PKG/etc/profile.d/extrapaths.sh << "EOF"
if [ -d /usr/local/lib/pkgconfig ] ; then
        pathappend /usr/local/lib/pkgconfig PKG_CONFIG_PATH
fi
if [ -d /usr/local/bin ]; then
        pathprepend /usr/local/bin
fi
if [ -d /usr/local/sbin -a $EUID -eq 0 ]; then
        pathprepend /usr/local/sbin
fi

if [ -d ~/bin ]; then
        pathprepend ~/bin
fi
#if [ $EUID -gt 99 ]; then
#        pathappend .
#fi
EOF
cat > $PKG/etc/profile.d/readline.sh << "EOF"
# Setup the INPUTRC environment variable.
if [ -z "$INPUTRC" -a ! -f "$HOME/.inputrc" ] ; then
        INPUTRC=/etc/inputrc
fi
export INPUTRC
EOF
cat > $PKG/etc/profile.d/umask.sh << "EOF"
# By default we want the umask to get set.
if [ "$(id -gn)" = "$(id -un)" -a $EUID -gt 99 ] ; then
  umask 002
else
  umask 022
fi
EOF
cat > $PKG/etc/profile.d/i18n.sh << "EOF"
# Set up i18n variables
export LANG=fr_FR.utf8
EOF
cat > $PKG/etc/profile.d/xorg.sh << "EOF"
XORG_PREFIX="/opt"
XORG_CONFIG="--prefix=$XORG_PREFIX \
             --sysconfdir=/etc \
             --mandir=$XORG_PREFIX/share/man \
             --localstatedir=/var"
export XORG_PREFIX XORG_CONFIG
pathappend $XORG_PREFIX/bin PATH
pathappend $XORG_PREFIX/lib/pkgconfig PKG_CONFIG_PATH
pathappend $XORG_PREFIX/share/pkgconfig PKG_CONFIG_PATH

pathappend $XORG_PREFIX/lib LIBRARY_PATH
pathappend $XORG_PREFIX/include C_INCLUDE_PATH
pathappend $XORG_PREFIX/include CPLUS_INCLUDE_PATH

ACLOCAL='aclocal -I $XORG_PREFIX/share/aclocal'

export PATH PKG_CONFIG_PATH ACLOCAL LIBRARY_PATH C_INCLUDE_PATH CPLUS_INCLUDE_PATH

EOF
# Set up KDE
cat > $PKG/etc/profile.d/kde.sh << "EOF"
export KDE_PREFIX=/opt/kde

KDEDIR=$KDE_PREFIX
pathappend $KDE_PREFIX/bin             PATH
pathappend $KDE_PREFIX/lib/pkgconfig   PKG_CONFIG_PATH
pathappend $KDE_PREFIX/share/pkgconfig PKG_CONFIG_PATH
pathappend $KDE_PREFIX/share           XDG_DATA_DIRS
pathappend /etc/kde/xdg                XDG_CONFIG_DIRS

export KDE_PREFIX KDEDIR

EOF
cat > $PKG/etc/bashrc << "EOF"
# Begin /etc/bashrc
# Written for Beyond Linux From Scratch
# by James Robertson <jameswrobertson@earthlink.net>
# updated by Bruce Dubbs <bdubbs@linuxfromscratch.org>

# System wide aliases and functions.

# System wide environment variables and startup programs should go into
# /etc/profile.  Personal environment variables and startup programs
# should go into ~/.bash_profile.  Personal aliases and functions should
# go into ~/.bashrc

# Provides a colored /bin/ls command.  Used in conjunction with code in
# /etc/profile.

alias ls='ls --color=auto'

# Provides prompt for non-login shells, specifically shells started
# in the X environment. [Review the LFS archive thread titled
# PS1 Environment Variable for a great case study behind this script
# addendum.]

NORMAL="\[\e[0m\]"
RED="\[\e[1;31m\]"
GREEN="\[\e[1;32m\]"
WHITE="\[\e[1;37m\]"
INFOMACHINE="`date +%H:%M` `uname -m` `uname -r` `whoami`@`uname -n`"
prompt_command() {
# Sauvegarde de la pos courante
tput sc
# Calcul de la largeur
let backwash=$(tput cols)-$(echo $INFOMACHINE | wc -m)-2
# Pos des curseurs à la position Y=0, X=longueur calculée
tput cup 0 ${backwash}
# Spécifie la couleur et la casse de la police
tput setaf 4; tput bold
# Affiche le chemin entre crochets
echo -n "["
# Specifie la couleur du chemin
tput setaf 6
# Affiche le chemin complet
echo -n "$INFOMACHINE"
tput setaf 4; tput bold
# Affiche le crochet fermé
echo -n "]"
# Remet le curseur à sa place
tput rc
}

PROMPT_COMMAND=prompt_command

case $TERM in
        xterm|rxvt*)
                TITLEBAR='\[\033]0;\u@\h \007\]'
                ;;
        *)
                TITLEBAR=''
                ;;
esac

if [[ $EUID == 0 ]] ; then
  PS1="$TITLEBAR$RED\u [ $NORMAL\w$RED ]# $NORMAL"
else
  PS1="$TITLEBAR$GREEN\u [ $NORMAL\w$GREEN ]\$ $NORMAL"
fi
# End /etc/bashrc
EOF
cat > $PKG/etc/inputrc << "EOF"
# Begin /etc/inputrc
# Modified by Chris Lynn <roryo@roryo.dynup.net>

# Allow the command prompt to wrap to the next line
set horizontal-scroll-mode Off

# Enable 8bit input
set meta-flag On
set input-meta On

# Turns off 8th bit stripping
set convert-meta Off

# Keep the 8th bit for display
set output-meta On

# none, visible or audible
set bell-style none

# All of the following map the escape sequence of the value
# contained in the 1st argument to the readline specific functions
"\eOd": backward-word
"\eOc": forward-word

# for linux console
"\e[1~": beginning-of-line
"\e[4~": end-of-line
"\e[5~": beginning-of-history
"\e[6~": end-of-history
"\e[3~": delete-char
"\e[2~": quoted-insert

# for xorg-term 
"\eOH": beginning-of-line
"\eOF": end-of-line

# for Konsole
"\e[H": beginning-of-line
"\e[F": end-of-line

# End /etc/inputrc
EOF
cat > $PKG/etc/fstab << "EOF"
# Begin /etc/fstab

# file system  mount-point  type     options             dump  fsck
#                                                              order
# Exemple de montage nfs
# 192.168.254.254:/home/thierry /home/thierry   nfs     rw,vers=3,_netdev,rsize=8192,wsize=8192 0 0

proc           /proc        proc     nosuid,noexec,nodev 0     0
sysfs          /sys         sysfs    nosuid,noexec,nodev 0     0
devpts         /dev/pts     devpts   gid=5,mode=620      0     0
tmpfs          /run         tmpfs    defaults            0     0
devtmpfs       /dev         devtmpfs mode=0755,nosuid    0     0

EOF
cat > $PKG/etc/skel/.bashrc << "EOF"
# Personal aliases and functions.

# Personal environment variables and startup programs should go in
# ~/.bash_profile.  System wide environment variables and startup
# programs are in /etc/profile.  System wide aliases and functions are
# in /etc/bashrc.

if [ -f "/etc/bashrc" ] ; then
  source /etc/bashrc
fi
if [ $EUID -eq 0 ] ; then
	alias del='pkg-get remove'
	alias get='pkg-get depinst'
	alias up='pkg-get update -r'
	alias check='pkg-get sync;pkg-get diff'
else
	alias del='sudo pkg-get remove'
	alias get='sudo pkg-get depinst'
	alias up='sudo pkg-get update -r'
	alias check='sudo pkg-get sync;sudo pkg-get diff'
fi
alias ll='ls -l'
alias l='ls -alh'
alias duh='du -h --max-depth=1'
alias dfh='df -h'
alias pkgfind='pkginfo -i | grep -i'
alias search='pkg-get dsearch'
# End ~/.bashrc
EOF
cat > $PKG/etc/skel/.bash_profile << "EOF"
# Personal environment variables and startup programs.

# Personal aliases and functions should go in ~/.bashrc.  System wide
# environment variables and startup programs are in /etc/profile.
# System wide aliases and functions are in /etc/bashrc.

append () {
  # First remove the directory
  local IFS=':'
  local NEWPATH
  for DIR in $PATH; do
     if [ "$DIR" != "$1" ]; then
       NEWPATH=${NEWPATH:+$NEWPATH:}$DIR
     fi
  done
  # Then append the directory
  export PATH=$NEWPATH:$1
}

if [ -f "$HOME/.bashrc" ] ; then
  source $HOME/.bashrc
fi

# unset append

# End ~/.bash_profile
EOF
cat > $PKG/etc/skel/.dmrc << "EOF"
[Desktop]
Session=LXDE
EOF
install -m600 $PKG/etc/skel/.bashrc $PKG/root/.bashrc
install -m600 $PKG/etc/skel/.bash_profile $PKG/root/.bash_profile

cat > $PKG/etc/sysconfig/console << "EOF"
FONT="Lat2-Terminus16"
UNICODE="1"
LOGLEVEL=1
EOF

echo "UTC=0" > $PKG/etc/sysconfig/clock

cat > $PKG//etc/hosts << "EOF"
# Begin /etc/hosts

127.0.0.1 localhost.localdomain localhost
127.0.0.1 nutyx

# End /etc/hosts
EOF

# Mouse
cat > $PKG/etc/sysconfig/mouse << "EOF"
MDEVICE="/dev/input/mice"
PROTOCOL="imps2"
EOF

cat > $PKG/bin/which << "EOF"
#!/bin/bash
type -pa "$@" | head -n 1 ; exit ${PIPESTATUS[0]}
EOF
chmod -v 755 $PKG/bin/which
chown -v root:root $PKG/bin/which

cat > $PKG/etc/blfs-bootscripts << "EOF"
scripts=blfs-bootscripts
EOF
echo "scriptsversion=$BLFSscriptsversion" >> $PKG/etc/blfs-bootscripts

cd lfs-bootscripts-$scriptsversion
patch -Np2 -i ../sekong-03.patch
make DESTDIR=$PKG install
mv $PKG/etc/rc.d/rcS.d/S{20,60}swap
cd ..
install -D -m 644 nutyx.1 \
$PKG/usr/share/man/fr/man1/nutyx.1
install -D -m 644 nutyx.1 \
$PKG/usr/share/man/man1/nutyx.1
cd blfs-bootscripts-$BLFSscriptsversion
make DESTDIR=$PKG install-random
# modprobe stuffs
echo "options snd-pcsp index=2" > $PKG/etc/modprobe.d/pc-speak.conf
cat > $PKG/etc/modprobe.d/broadcom.conf << "EOF"
blacklist ssb
blacklist bcma
blacklist b43
EOF
# X11 bug
mkdir -p $PKG/etc/X11/xorg.conf.d
ln -sv /usr/share/X11/xorg.conf.d/50-synaptics.conf $PKG/etc/X11/xorg.conf.d/50-synaptics.conf
cat > $PKG/etc/X11/xorg.conf.d/15.quirks.conf << "EOF"
Section "InputClass"
        Identifier "no need Accelerometer in X"
        MatchProduct "Accelerometer"
        Option "Ignore" "on"
EndSection
Section "InputClass"
        Identifier "no need accelerometer in X"
        MatchProduct "accelerometer"
        Option "Ignore" "on"
EndSection
EOF
# Usefull links
cd $PKG/root/
ln -s ../etc/fstab
ln -s ../boot/grub/grub.cfg
ln -s ../etc/inittab
ln -s ../etc/profile.d
ln -s ../etc/modprobe.d
ln -s ../etc/sysconfig/console
ln -s ../etc/sysconfig/network
ln -s ../etc/bashrc
ln -s ../etc/X11/xorg.conf.d/20-keyboard.conf
ln -s ../etc/prt-get.conf
ln -s ../etc/pkg-get.conf
ln -s ../etc/pkgadd.conf
ln -s ../etc/pkgmk.conf
cd -
}
